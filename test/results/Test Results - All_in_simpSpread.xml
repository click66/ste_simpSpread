<?xml version="1.0" encoding="UTF-8"?><testrun duration="3511" footerText="Generated by IntelliJ IDEA on 17/05/17 23:17" name="All in simpSpread">
    <count name="total" value="58"/>
    <count name="failed" value="2"/>
    <count name="passed" value="56"/>
    <config nameIsGenerated="true" configId="JUnit" name="All in simpSpread">
        <extension name="coverage" enabled="false" merge="false" sample_coverage="true" runner="idea"/>
        <module name="simpSpread"/>
        <option name="ALTERNATIVE_JRE_PATH_ENABLED" value="false"/>
        <option name="ALTERNATIVE_JRE_PATH"/>
        <option name="PACKAGE_NAME" value=""/>
        <option name="MAIN_CLASS_NAME"/>
        <option name="METHOD_NAME"/>
        <option name="TEST_OBJECT" value="package"/>
        <option name="VM_PARAMETERS" value="-ea"/>
        <option name="PARAMETERS"/>
        <option name="WORKING_DIRECTORY" value="$MODULE_DIR$"/>
        <option name="ENV_VARIABLES"/>
        <option name="PASS_PARENT_ENVS" value="true"/>
        <option name="TEST_SEARCH_SCOPE">
            <value defaultName="singleModule"/>
        </option>
        <envs/>
        <patterns/>
    </config>
    <root name="&lt;default package&gt;" location="java:suite://&lt;default package&gt;">
        <output type="stdout">/Library/Java/JavaVirtualMachines/jdk1.8.0_92.jdk/Contents/Home/bin/java -ea -javaagent:/Users/clark/Library/Caches/IntelliJIdea2016.3/coverageJars/coverage-agent.jar=/private/var/folders/nq/fk2wfw910zs24pb5pfxw3qbc0000gn/T/coverage2args -Didea.launcher.port=7536 &amp;quot;-Didea.launcher.bin.path=/Applications/IntelliJ IDEA.app/Contents/bin&amp;quot; -Dfile.encoding=UTF-8 -classpath &amp;quot;/Applications/IntelliJ IDEA.app/Contents/lib/idea_rt.jar:/Applications/IntelliJ IDEA.app/Contents/plugins/junit/lib/junit-rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_92.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_92.jdk/Contents/Home/jre/lib/deploy.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_92.jdk/Contents/Home/jre/lib/ext/cldrdata.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_92.jdk/Contents/Home/jre/lib/ext/dnsns.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_92.jdk/Contents/Home/jre/lib/ext/jaccess.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_92.jdk/Contents/Home/jre/lib/ext/jfxrt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_92.jdk/Contents/Home/jre/lib/ext/localedata.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_92.jdk/Contents/Home/jre/lib/ext/nashorn.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_92.jdk/Contents/Home/jre/lib/ext/sunec.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_92.jdk/Contents/Home/jre/lib/ext/sunjce_provider.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_92.jdk/Contents/Home/jre/lib/ext/sunpkcs11.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_92.jdk/Contents/Home/jre/lib/ext/zipfs.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_92.jdk/Contents/Home/jre/lib/javaws.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_92.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_92.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_92.jdk/Contents/Home/jre/lib/jfxswt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_92.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_92.jdk/Contents/Home/jre/lib/management-agent.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_92.jdk/Contents/Home/jre/lib/plugin.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_92.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_92.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_92.jdk/Contents/Home/lib/ant-javafx.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_92.jdk/Contents/Home/lib/dt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_92.jdk/Contents/Home/lib/javafx-mx.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_92.jdk/Contents/Home/lib/jconsole.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_92.jdk/Contents/Home/lib/packager.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_92.jdk/Contents/Home/lib/sa-jdi.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_92.jdk/Contents/Home/lib/tools.jar:/Users/clark/Desktop/STE/simpSpread/out/test/simpSpread:/Users/clark/Desktop/STE/simpSpread/out/production/simpSpread:/Applications/IntelliJ IDEA.app/Contents/lib/junit-4.12.jar:/Applications/IntelliJ IDEA.app/Contents/lib/hamcrest-core-1.3.jar:/Users/clark/.m2/repository/org/mockito/mockito-all/1.10.19/mockito-all-1.10.19.jar&amp;quot; com.intellij.rt.execution.application.AppMain com.intellij.rt.execution.junit.JUnitStarter -ideVersion5 @w@/private/var/folders/nq/fk2wfw910zs24pb5pfxw3qbc0000gn/T/idea_working_dirs_junit.tmp @/private/var/folders/nq/fk2wfw910zs24pb5pfxw3qbc0000gn/T/idea_junit.tmp -socket50106
</output>
        <output type="stderr">objc[2642]: Class JavaLaunchHelper is implemented in both /Library/Java/JavaVirtualMachines/jdk1.8.0_92.jdk/Contents/Home/bin/java (0x10aaba4c0) and /Library/Java/JavaVirtualMachines/jdk1.8.0_92.jdk/Contents/Home/jre/lib/libinstrument.dylib (0x10ab844e0). One of the two will be used. Which one is undefined.
</output>
        <output type="stdout">---- IntelliJ IDEA coverage runner ---- 
sampling ...
include patterns:
exclude patterns:
</output>
        <output type="stdout">Process finished with exit code 255
</output>
    </root>
    <suite duration="2972" locationUrl="java:suite://simpSpread.Cell.ProviderTest" name="ProviderTest" status="passed">
        <test duration="2874" locationUrl="java:test://simpSpread.Cell.ProviderTest.getCellMatrix" name="ProviderTest.getCellMatrix" status="passed"/>
        <test duration="2" locationUrl="java:test://simpSpread.Cell.ProviderTest.getInvalidRowCount" name="ProviderTest.getInvalidRowCount" status="passed"/>
        <test duration="44" locationUrl="java:test://simpSpread.Cell.ProviderTest.getColumnCount" name="ProviderTest.getColumnCount" status="passed"/>
        <test duration="1" locationUrl="java:test://simpSpread.Cell.ProviderTest.getInvalidColumnCount" name="ProviderTest.getInvalidColumnCount" status="passed"/>
        <test duration="1" locationUrl="java:test://simpSpread.Cell.ProviderTest.testConstruct" name="ProviderTest.testConstruct" status="passed"/>
        <test duration="21" locationUrl="java:test://simpSpread.Cell.ProviderTest.getDependenciesMapWithReferences" name="ProviderTest.getDependenciesMapWithReferences" status="passed"/>
        <test duration="0" locationUrl="java:test://simpSpread.Cell.ProviderTest.getDependenciesMap" name="ProviderTest.getDependenciesMap" status="passed"/>
        <test duration="1" locationUrl="java:test://simpSpread.Cell.ProviderTest.getTopologicalList" name="ProviderTest.getTopologicalList" status="passed"/>
        <test duration="28" locationUrl="java:test://simpSpread.Cell.ProviderTest.getRowCount" name="ProviderTest.getRowCount" status="passed"/>
    </suite>
    <suite duration="32" locationUrl="java:suite://simpSpread.Evaluator.WorkBookTest" name="WorkBookTest" status="passed">
        <test duration="0" locationUrl="java:test://simpSpread.Evaluator.WorkBookTest.evaluate" name="WorkBookTest.evaluate" status="passed"/>
        <test duration="32" locationUrl="java:test://simpSpread.Evaluator.WorkBookTest.testConstruct" name="WorkBookTest.testConstruct" status="passed"/>
        <test duration="0" locationUrl="java:test://simpSpread.Evaluator.WorkBookTest.evaluateCircularDependency" name="WorkBookTest.evaluateCircularDependency" status="passed"/>
    </suite>
    <suite duration="18" locationUrl="java:suite://simpSpread.InputScannerTest" name="InputScannerTest" status="passed">
        <test duration="10" locationUrl="java:test://simpSpread.InputScannerTest.nextIntInvalid" name="InputScannerTest.nextIntInvalid" status="passed"/>
        <test duration="2" locationUrl="java:test://simpSpread.InputScannerTest.close" name="InputScannerTest.close" status="passed"/>
        <test duration="1" locationUrl="java:test://simpSpread.InputScannerTest.nextLine" name="InputScannerTest.nextLine" status="passed"/>
        <test duration="5" locationUrl="java:test://simpSpread.InputScannerTest.nextInt" name="InputScannerTest.nextInt" status="passed"/>
    </suite>
    <suite duration="183" locationUrl="java:suite://simpSpread.Operation.AddTest" name="AddTest" status="passed">
        <test duration="183" locationUrl="java:test://simpSpread.Operation.AddTest.apply" name="AddTest.apply" status="passed"/>
        <test duration="0" locationUrl="java:test://simpSpread.Operation.AddTest.testConstruct" name="AddTest.testConstruct" status="passed"/>
    </suite>
    <suite duration="2" locationUrl="java:suite://simpSpread.Operation.CosineTest" name="CosineTest" status="passed">
        <test duration="2" locationUrl="java:test://simpSpread.Operation.CosineTest.apply" name="CosineTest.apply" status="passed"/>
        <test duration="0" locationUrl="java:test://simpSpread.Operation.CosineTest.testConstruct" name="CosineTest.testConstruct" status="passed"/>
    </suite>
    <suite duration="69" locationUrl="java:suite://simpSpread.Operation.DecrementTest" name="DecrementTest" status="failed">
        <test duration="69" locationUrl="java:test://simpSpread.Operation.DecrementTest.apply" name="DecrementTest.apply" status="failed">
            <output type="stderr">Argument(s) are different! Wanted:
stack.push(0.0);
-&amp;gt; at simpSpread.Operation.OperationTest.assertOperationApply(OperationTest.java:34)
Actual invocation has different arguments:
stack.push(-1.0);
-&amp;gt; at simpSpread.Operation.Decrement.apply(Decrement.java:16)
Comparison Failure: 
</output>
            <output type="stdout">Expected :
</output>
            <output type="stderr">stack.push(0.0);
</output>
            <output type="stdout">Actual   :
</output>
            <output type="stderr">stack.push(-1.0);
 
Argument(s) are different! Wanted:
stack.push(0.0);
-&amp;gt; at simpSpread.Operation.OperationTest.assertOperationApply(OperationTest.java:34)
Actual invocation has different arguments:
stack.push(-1.0);
-&amp;gt; at simpSpread.Operation.Decrement.apply(Decrement.java:16)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at simpSpread.Operation.OperationTest.assertOperationApply(OperationTest.java:34)
	at simpSpread.Operation.OperationTest.assertOperationApply(OperationTest.java:48)
	at simpSpread.Operation.DecrementTest.apply(DecrementTest.java:42)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.junit.runners.Suite.runChild(Suite.java:128)
	at org.junit.runners.Suite.runChild(Suite.java:27)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:51)
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:237)
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:147)
</output>
        </test>
        <test duration="0" locationUrl="java:test://simpSpread.Operation.DecrementTest.testConstruct" name="DecrementTest.testConstruct" status="passed"/>
    </suite>
    <suite duration="7" locationUrl="java:suite://simpSpread.Operation.DivideTest" name="DivideTest" status="passed">
        <test duration="7" locationUrl="java:test://simpSpread.Operation.DivideTest.apply" name="DivideTest.apply" status="passed"/>
        <test duration="0" locationUrl="java:test://simpSpread.Operation.DivideTest.applyDivideByZero" name="DivideTest.applyDivideByZero" status="passed"/>
        <test duration="0" locationUrl="java:test://simpSpread.Operation.DivideTest.testConstruct" name="DivideTest.testConstruct" status="passed"/>
    </suite>
    <suite duration="14" locationUrl="java:suite://simpSpread.Operation.FactoryTest" name="FactoryTest" status="passed">
        <test duration="9" locationUrl="java:test://simpSpread.Operation.FactoryTest.getSubtractOperation" name="FactoryTest.getSubtractOperation" status="passed"/>
        <test duration="1" locationUrl="java:test://simpSpread.Operation.FactoryTest.getAddOperation" name="FactoryTest.getAddOperation" status="passed"/>
        <test duration="1" locationUrl="java:test://simpSpread.Operation.FactoryTest.getIncrementOperation" name="FactoryTest.getIncrementOperation" status="passed"/>
        <test duration="0" locationUrl="java:test://simpSpread.Operation.FactoryTest.getCosineOperation" name="FactoryTest.getCosineOperation" status="passed"/>
        <test duration="1" locationUrl="java:test://simpSpread.Operation.FactoryTest.getDivideOperation" name="FactoryTest.getDivideOperation" status="passed"/>
        <test duration="0" locationUrl="java:test://simpSpread.Operation.FactoryTest.getDecrementOperation" name="FactoryTest.getDecrementOperation" status="passed"/>
        <test duration="1" locationUrl="java:test://simpSpread.Operation.FactoryTest.getSineOperation" name="FactoryTest.getSineOperation" status="passed"/>
        <test duration="0" locationUrl="java:test://simpSpread.Operation.FactoryTest.getMultiplyOperation" name="FactoryTest.getMultiplyOperation" status="passed"/>
        <test duration="1" locationUrl="java:test://simpSpread.Operation.FactoryTest.getTangentOperation" name="FactoryTest.getTangentOperation" status="passed"/>
    </suite>
    <suite duration="9" locationUrl="java:suite://simpSpread.Operation.IncrementTest" name="IncrementTest" status="passed">
        <test duration="9" locationUrl="java:test://simpSpread.Operation.IncrementTest.apply" name="IncrementTest.apply" status="passed"/>
        <test duration="0" locationUrl="java:test://simpSpread.Operation.IncrementTest.testConstruct" name="IncrementTest.testConstruct" status="passed"/>
    </suite>
    <suite duration="4" locationUrl="java:suite://simpSpread.Operation.MultiplyTest" name="MultiplyTest" status="passed">
        <test duration="4" locationUrl="java:test://simpSpread.Operation.MultiplyTest.apply" name="MultiplyTest.apply" status="passed"/>
        <test duration="0" locationUrl="java:test://simpSpread.Operation.MultiplyTest.testConstruct" name="MultiplyTest.testConstruct" status="passed"/>
    </suite>
    <suite duration="3" locationUrl="java:suite://simpSpread.Operation.SineTest" name="SineTest" status="failed">
        <test duration="3" locatƒfionUrl="java:test://simpSpread.Operation.SineTest.apply" name="SineTest.apply" status="failed">
            <output type="stderr">Argument(s) are different! Wanted:
stack.push(-0.9992080341070627);
-&amp;gt; at simpSpread.Operation.OperationTest.assertOperationApply(OperationTest.java:34)
Actual invocation has different arguments:
stack.push(-3.999237798808362);
-&amp;gt; at simpSpread.Operation.Sine.apply(Sine.java:16)
Comparison Failure: 
</output>
            <output type="stdout">Expected :
</output>
            <output type="stderr">stack.push(-0.9992080341070627);
</output>
            <output type="stdout">Actual   :
</output>
            <output type="stderr">stack.push(-3.999237798808362);
 
Argument(s) are different! Wanted:
stack.push(-0.9992080341070627);
-&amp;gt; at simpSpread.Operation.OperationTest.assertOperationApply(OperationTest.java:34)
Actual invocation has different arguments:
stack.push(-3.999237798808362);
-&amp;gt; at simpSpread.Operation.Sine.apply(Sine.java:16)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at simpSpread.Operation.OperationTest.assertOperationApply(OperationTest.java:34)
	at simpSpread.Operation.OperationTest.assertOperationApply(OperationTest.java:48)
	at simpSpread.Operation.SineTest.apply(SineTest.java:37)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.junit.runners.Suite.runChild(Suite.java:128)
	at org.junit.runners.Suite.runChild(Suite.java:27)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:51)
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:237)
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:147)
</output>
        </test>
        <test duration="0" locationUrl="java:test://simpSpread.Operation.SineTest.testConstruct" name="SineTest.testConstruct" status="passed"/>
    </suite>
    <suite duration="4" locationUrl="java:suite://simpSpread.Operation.SubstractTest" name="SubstractTest" status="passed">
        <test duration="4" locationUrl="java:test://simpSpread.Operation.SubstractTest.apply" name="SubstractTest.apply" status="passed"/>
        <test duration="0" locationUrl="java:test://simpSpread.Operation.SubstractTest.testConstruct" name="SubstractTest.testConstruct" status="passed"/>
    </suite>
    <suite duration="5" locationUrl="java:suite://simpSpread.Operation.TangentTest" name="TangentTest" status="passed">
        <test duration="4" locationUrl="java:test://simpSpread.Operation.TangentTest.apply" name="TangentTest.apply" status="passed"/>
        <test duration="1" locationUrl="java:test://simpSpread.Operation.TangentTest.testConstruct" name="TangentTest.testConstruct" status="passed"/>
    </suite>
    <suite duration="68" locationUrl="java:suite://simpSpread.SpreadsheetTest" name="SpreadsheetTest" status="passed">
        <test duration="48" locationUrl="java:test://simpSpread.SpreadsheetTest.isWorkBookCircular" name="SpreadsheetTest.isWorkBookCircular" status="passed"/>
        <test duration="0" locationUrl="java:test://simpSpread.SpreadsheetTest.isPrettyPrint" name="SpreadsheetTest.isPrettyPrint" status="passed"/>
        <test duration="1" locationUrl="java:test://simpSpread.SpreadsheetTest.evaluate" name="SpreadsheetTest.evaluate" status="passed"/>
        <test duration="18" locationUrl="java:test://simpSpread.SpreadsheetTest.getInputScanner" name="SpreadsheetTest.getInputScanner" status="passed"/>
        <test duration="0" locationUrl="java:test://simpSpread.SpreadsheetTest.testConstruct" name="SpreadsheetTest.testConstruct" status="passed"/>
        <test duration="1" locationUrl="java:test://simpSpread.SpreadsheetTest.processWorkbook" name="SpreadsheetTest.processWorkbook" status="passed"/>
        <test duration="0" locationUrl="java:test://simpSpread.SpreadsheetTest.getResults" name="SpreadsheetTest.getResults" status="passed"/>
    </suite>
    <suite duration="121" locationUrl="java:suite://simpSpread.WorkBookTest" name="WorkBookTest" status="passed">
        <test duration="68" locationUrl="java:test://simpSpread.WorkBookTest.readInput" name="WorkBookTest.readInput" status="passed"/>
        <test duration="0" locationUrl="java:test://simpSpread.WorkBookTest.printWorkbook" name="WorkBookTest.printWorkbook" status="passed"/>
        <test duration="49" locationUrl="java:test://simpSpread.WorkBookTest.evaluate" name="WorkBookTest.evaluate" status="passed"/>
        <test duration="1" locationUrl="java:test://simpSpread.WorkBookTest.testConstruct" name="WorkBookTest.testConstruct" status="passed"/>
        <test duration="2" locationUrl="java:test://simpSpread.WorkBookTest.evaluateWithoutRead" name="WorkBookTest.evaluateWithoutRead" status="passed"/>
        <test duration="1" locationUrl="java:test://simpSpread.WorkBookTest.testCircularDependent" name="WorkBookTest.testCircularDependent" status="passed"/>
        <test duration="0" locationUrl="java:test://simpSpread.WorkBookTest.prettyPrintWorkbook" name="WorkBookTest.prettyPrintWorkbook" status="passed"/>
    </suite>
</testrun>
